@model IEnumerable<Product>

@{
    ViewData["Title"] = "Product List";
    ViewData["ControllerName"] = "Product";
    ViewData["ActionName"] = "Index";
}

<div class="d-flex justify-content-between align-items-center">
    <h1 class="page-title">Product</h1>

    <!-- Search Bar -->
    <form class="row g-3 mb-3" method="get" asp-action="Index">
        <!-- Search Bar -->
        <div class="col-md-4">
            <label for="query" class="form-label">Search Products</label>
            <input type="text" class="form-control" name="query" placeholder="Enter product name..." value="@ViewData["SearchQuery"]">
        </div>
    <!--filtering-->
    
    <div class="col-auto">
        <select class="form-control mb-2" asp-items="ViewBag.Categories" name="categoryId">
            <option value="">All Categories</option>
        </select>
    </div>
    <div class="col-auto">
        <select class="form-control mb-2" asp-items="ViewBag.Suppliers" name="supplierId">
            <option value="">All Suppliers</option>
        </select>
    </div>

    <div class="col-auto">
        <button type="submit" class="btn btn-primary mb-2">Search</button>
    </div>
</form>
    <div class="col-auto"></div>

    <a asp-area="" class="btn btn-sm btn-primary" nasp-controller="Product" asp-action="Create"> Add Product</a>

</div>





<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>#</th>
            <th>Name</th>
            <th>Price</th>
            <th>Stock</th>
            <th>Category</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model)
        {
            <tr>
                <td>@product.ProductId</td>
                <td>@product.Name</td>
                <td>$@product.Price</td>
                <td>
                    @if (product.Quantity > 0)
                    {
                        <span>@product.Quantity</span>
                    }
                    else
                    {
                        <span class="text-danger">Out of Stock</span>
                    }
                </td>
                <td>@product.Category?.Name</td>
                <td>
                    <div class="d-flex gap-2">
                        
                        <a href="@Url.Action("Details", new { id = product.ProductId })" class="btn btn-sm btn-secondary">View Product</a>
                       
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

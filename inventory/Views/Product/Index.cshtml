@model IEnumerable<Product>

@{
    ViewData["Title"] = "Product List";
    ViewData["ControllerName"] = "Product";
    ViewData["ActionName"] = "Index";
}

<div class="d-flex justify-content-between align-items-center">
    <h1 class="page-title">Product</h1>

    <!-- Search Bar -->
    <form class="d-flex" method="get" asp-action="Index" asp-controller="Product">
        <input class="form-control me-2" type="search" name="query" placeholder="Search products..." aria-label="Search" value="@ViewData["SearchQuery"]">
        <button class="btn btn-outline-primary" type="submit">Search</button>
    </form>

    <a asp-area="" asp-controller="Category" asp-action="Create"> Add Category</a>
    <a asp-area="" asp-controller="Product" asp-action="Create"> Add Product</a>

</div>



<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>#</th>
            <th>Name</th>
            <th>Price</th>
            <th>Stock</th>
            <th>Category</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model)
        {
            <tr>
                <td>@product.ProductId</td>
                <td>@product.Name</td>
                <td>$@product.Price</td>
                <td>
                    @if (product.Quantity > 0)
                    {
                        <span>@product.Quantity</span>
                    }
                    else
                    {
                        <span class="text-danger">Out of Stock</span>
                    }
                </td>
                <td>@product.Category?.Name</td>
                <td>
                    <div class="d-flex gap-2">
                        
                        <a href="@Url.Action("Details", new { id = product.ProductId })" class="btn btn-sm btn-secondary">View Product</a>
                       
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
